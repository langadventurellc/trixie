[project]
name = "trixie"
version = "0.1.0"
description = "Docker image for a testing proxy that captures requests and responses and stores them to be queried for test assertions."
readme = "README.md"
requires-python = ">=3.12,<4.0"

dependencies = [
    "fastapi>=0.116.1",
    "greenlet>=3.2.3",
    "httpx>=0.28.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.0.0",
    "pyla-logger>=1.2.0",
    "uvicorn>=0.35.0",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flake8>=7.3.0",
    "flake8-pyproject>=1.2.3",
    "isort>=6.0.1",
    "poethepoet>=0.36.0",
    "pre-commit>=4.2.0",
    "pyla-linter>=1.3.0",
    "pyright>=1.1.403",
    "pytest>=8.0.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
ensure_newline_before_comments = true
split_on_trailing_comma = true
force_grid_wrap = 0
line_length = 100
src_paths = ["src", "tests"]

[tool.black]
line-length = 100

[tool.flake8]
exclude = ["bin/*", "temp", ".venv"]
max-line-length = 100
ignore = ["E203", "W503", "E226"]
per-file-ignores = ["tests/*:EL101,WL002"]

[tool.pyright]
include = ["src/app", "tests"]
exclude = ["bin", "temp", ".venv", "alembic"]

[tool.poe.tasks]
black = "black ."
format = "black ."
isort = "isort ."
lint = "flake8"
test = "pytest -q"
type-check = "pyright"
quality = [
    "black",
    "isort",
    "lint",
    "type-check",
]

# Development tasks
dev-start = "uvicorn src.app.main:app --reload --host 0.0.0.0 --port 8000"
dev-docker = "bash scripts/docker_start.sh"
